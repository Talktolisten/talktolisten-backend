name: Build and Deploy (Continuous Integration)

on: [push, pull_request]

jobs:
  build:
    environment:
      name: main
    env:
      database_hostname=${{secrets.DATABASE_HOSTNAME}}
      database_port=${{secrets.DATABASE_PORT}}
      database_password=${{secrets.DATABASE_PASSWORD}}
      database_name=${{secrets.DATABASE_NAME}}
      database_username=${{secrets.DATABASE_USERNAME}}
      fb_type=${{secrets.FB_TYPE}}
      fb_project_id=${{secrets.FB_PROJECT_ID}}
      fb_private_key_id=${{secrets.FB_PRIVATE_KEY_ID}}
      fb_private_key=${{secrets.FB_PRIVATE_KEY}}
      fb_client_email=${{secrets.FB_CLIENT_EMAIL}}
      fb_client_id=${{secrets.FB_CLIENT_ID}}
      fb_auth_uri=${{secrets.FB_AUTH_URI}}
      fb_token_uri=${{secrets.FB_TOKEN_URI}}
      fb_auth_provider_x509_cert_url=${{secrets.FB_AUTH_PROVIDER_X509_CERT_URL}}
      fb_client_x509_cert_url=${{secrets.FB_CLIENT_X509_CERT_URL}}
      fb_universe_domain=${{secrets.FB_UNIVERSE_DOMAIN}}
      speech_key=${{secrets.SPEECH_KEY}}
      speech_region=${{secrets.SPEECH_REGION}}
      runpod_endpoint=${{secrets.RUNPOD_ENDPOINT}}
      runpod_api_key=${{secrets.RUNPOD_API_KEY}}


    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v4
      - name: Install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   environment:
  #     name: production
  #   steps:
  #     - name: pulling git repo
  #       uses: actions/checkout@v2
  #     - name: deploying to Heroku
  #       uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
  #       with:
  #         heroku_api_key: ${{secrets.HEROKU_API_KEY}}
  #         heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
  #         heroku_email: ${{secrets.HEROKU_EMAIL}}

  #     - name: deploy to ubuntu server
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{secrets.PROD_HOST}}
  #         username: ${{secrets.PROD_USERNAME}}
  #         password: ${{secrets.PROD_PASSWORD}}
  #         script: |
  #           cd app/src
  #           git pull
  #           echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart api
  #     # login to our ubuntu
  #     # cd /app/src
  #     # git pull
  #     # systemctl restart api